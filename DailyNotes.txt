
Language:
	english,telugu,tamil...communication
	
	
Programming Language:	
	communication with machine 

POP 						OOP
B,BCPL,C,COBOL,PHOTON...	C++,JAVA,PYTHON,.NET...

	
	python general purpose high level language 

	guido van rossam 1989
	

	feb 20th 1991

	syntax
 Java 53
 public class Test
 {
 public static void main(String args[])
 {
 System.out.println("welcome to java");
 }
 }

python
print("welcome to python")

33 keywords

functional programming  features from C
Object Oriented Features  C++
Scripting Language features from shell script
moduler programming Modula-3
C,ABC


1)desktop/standalone apps  ex: notepad++,anti virus,media player / corepython,tkinter
2)web application			ex:gmail,amazon,flipkart...			/Django,Flask
3)database applications     PDBC
4)networking programming
5)gaming apps
6)Data Analysis
7)ML
8)IOT
9)AI ....

Features:
simple and easy to learn
free source and open force jython
high language 
portability/platform independent WORA
dynamic typed  static typed byte age=32
Interpreted	(PVM)
rich set of library

	flavours
	
	cpython
	jython
	IronPython
	PyPY
	RubyPython
	AnacondaPython

1.x 1991
2.x 2000
3.x 2008



import keyword
>>> keyword.kwlist
['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue',
 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from',
 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or',
 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']


identifiers
	 any name in python will call it as identifier 
	 
	 a-z
	 A-z
	 0-9 we can use digit but we can't start with digit  
	 _
	 
	 _password-->private
	 __xyz
	 __abc__
identation

variables
	variables are names given to the memeory location
	
		sandeep trainer 9449494949



datatypes

		int
		float
		complex
		bool
		str
		range
		bytes
		bytesarray
		
		list
		tuple
		set
		frozenset
		dict
		none
		
type()
print()
id()


slice -->a piece
[]

0
accenture
+ve 
-ve

flow control
					-2-1
			accenture
			012345678

type casting

	int()
	float()
	complex()
	bool()
	str()

all these are immuttable

		list
		tuple
		set
		frozenset
		dict
List:
	1)duplicates are allowed 
	2)insertion order is preserved
	3)both homogeneous and heterogeneous data  allowed
	4)growable in nature 
	5)[] square brackets
	6)list is muttable
names=["suresh","mahesh","rajesh","naresh","hitesh","somesh","mahesh"]
>>> type(names)
<class 'list'>
>>> print(names)
['suresh', 'mahesh', 'rajesh', 'naresh', 'hitesh', 'somesh', 'mahesh']
>>> names=["suresh","mahesh",12.54,"rajesh","naresh",123,"hitesh","somesh","mahesh"]
>>> print(names)
['suresh', 'mahesh', 12.54, 'rajesh', 'naresh', 123, 'hitesh', 'somesh', 'mahesh']
>>> names.append("accenture")
>>> print(names)
['suresh', 'mahesh', 12.54, 'rajesh', 'naresh', 123, 'hitesh', 'somesh', 'mahesh', 'accenture']
>>> names.remove("mahesh")
>>> print(names)
['suresh', 12.54, 'rajesh', 'naresh', 123, 'hitesh', 'somesh', 'mahesh', 'accenture']
>>> list1=[12,23,29,34,12]
>>> print(list1)
[12, 23, 29, 34, 12]
>>> list1[0]
12
>>> list1[2]
29
>>> list1[-1]
12
>>> list1[-2]
34
>>> list1[1:3]
[23, 29]


Tuple:
	1)duplicates are allowed 
	2)insertion order is preserved
	3)both homogeneous and heterogeneous data  allowed
	4)fixed in nature 
	5)()
	6)tuple is imuttable
	

>>> ids=(21,45,22,87,54,21,99)
>>> type(ids)
<class 'tuple'>
>>> print(ids)
(21, 45, 22, 87, 54, 21, 99)
>>> ids.append(1234)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'tuple' object has no attribute 'append'
>>> ids.remove(45)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'tuple' object has no attribute 'remove'
>>> ids=(21,45,22,87,54,21,99,'suresh','mahesh')
>>> print(ids)
(21, 45, 22, 87, 54, 21, 99, 'suresh', 'mahesh')



Set:
	1)duplicates are not allowed 
	2)insertion order is not preserved
	3)both homogeneous and heterogeneous data  allowed
	4)growable in nature 
	5){}
	6)set is muttable
	
	dict-->k,v
	
FrozenSet:
	1)duplicates are not allowed 
	2)insertion order is not preserved
	3)both homogeneous and heterogeneous data  allowed
	4)fixed in nature 
	5)({})
	6)frozenSet is imuttable
	
	dict-->k,v


	{"eid",:123,"ename:"mahesh"}
	
 fs=frozenset(list)
>>> print(fs)
frozenset({32, 21, 22, 12, 44})
>>> for i in fs:print(i)
...
32
21
22
12
44

Dict:
to represent objects as a key and value pair
	key must be unique and value can be dupllicate

>>> dictex={123:'sandeep',124:'mahesh'}
>>> type(dictex)
<class 'dict'>
>>> print(dicrex)
print(dictex[123])
sandeep

IDE 
	
	
	